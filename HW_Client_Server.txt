HW
Client_Server
1) Прочиать про клиент-серверную архитектуру
Клиент-серверная архитектура – это такая архитектура, в которой сетевая нагрузка распределяется между поставщиками услуг – серверами и заказчиками услуг- клиентами.
Фактически клиент и сервер это некое ПО, обычно расположенные на разных вычислительных машинах и взаимодействуют между собой через сетевые протоколы. 
1.Клиент отправляет http запрос (request) на сервер, 
2. Сервер отправляет запрос в базу данных 
3. База данных отправляет ответ (response) серверу
4. Сервер отправляет ответ Клиенту 

2) Что такое HTTP и HTTPS
HTTP и HTTPS - это протоколы, HTTPS использует TLS (SSL) для шифрования HTTP запросов and ответов. В резульатате, HTTPS является более безопасным, чем HTTP.

3) HTTP методы
-Метод GET в HTTP используется для получения информации от сервера по заданному URI (URI в HTTP). Запросы клиентов, использующие метод GET должны получать только данные и не должны никак влиять на эти данные.
-Метод HEAD работает точно так же, как GET, но в ответ сервер посылает только заголовки и статусную строку без тела HTTP сообщения.
-Метод POST используется для отправки данных на сервер, например, из HTML форм, которые заполняет посетитель сайта.
-Метод PUT используется для загрузки содержимого запроса на указанный в этом же запросе URI.
-Метод DELETE удаляет указанный в URI ресурс.
-Метод CONNECT преобразует существующее соединение в тоннель.
-Метод OPTIONS используется для получения параметров текущего HTTP соединения.
-Метод TRACE создает петлю, благодаря которой клиент может увидеть, что происходит с сообщением на всех узлах передачи.

4) HTTP статус коды сервера
Информационные (100-105) Пример: Ошибка 100 - Cервер удовлетворён сведениями о запросе
Успешные (200-226) Пример: Ошибка 200 - Успешный запрос.
Перенаправление (300-307) Пример: Ошибка 302 - Found, Moved Temporarily документ временно доступен по другому URI
Ошибка клиента (400-499) Пример: Ошибка 404 - Not Found - Сервер понял запрос, но не нашёл соответствующего ресурса по указанному URI;
Ошибка сервера (500-510) Пример: Ошибка 500 - Internal Server Error Любая внутренняя ошибка сервера

5) Что такое ядро браузера 
Браузерный движок — представляет собой программу, преобразующую содержимое веб-страниц (файлы HTML, XML, цифровые изображения и т. д.) и информацию о форматировании (в форматах CSS, XSL и т. д.) в интерактивное изображение форматированного содержимого на экране.

6) Какие браузеры какиие ядра используют
ядро Blink - Google Chrome 28+, Microsoft Edge 79+, Opera 15+;
ядро Gecko — Mozilla;
ядро WebKit — Apple Safari.

7) Что такое API
API (Application programming interface) - прикладной программный интерфейс, который позволяет поддерживать межмашинное взаимодействие через сеть.

8) Что такое ендпоинты
Конечные точки указывают, где API могут получить доступ к ресурсам, и играют ключевую роль в обеспечении правильной работы взаимодействующего с ними программного обеспечения.

9) URL (URI, URL, URN)
URI (Uniform Resource Identifier)= URL(Uniform Resource Locator)+URN(Uniform Resource Name)
URI (Uniform Resource Identifier) – обобщенное понятие множества идентификации ресурса, которое включает как URL, так и URN. Может включать их по отдельности или же вместе.
URL(Uniform Resource Locator) - уникальный адрес сайта в сети, который определяет его местонахождение в сети Интернет
URN(Uniform Resource Name) – неизменяемая последовательность символов, определяющая только имя некоторого ресурса (но не говорит как к нему подключаться).

10) Идемпотентные HTTP методы
Метод считается «идемпотентным», если эффект на сервер от одного запроса такой же как от нескольких идентичных запросов такого типа. 
Другими словами если многократное повторение одних и тех же запросов возвращает одинаковые результаты, то метод считается идемпотентным.
DELETE, GET, HEAD, OPTIONS, PUT, TRACE

11) Безопасные HTTP методы
Метод HTTP является безопасным, если он не меняет состояние сервера, проводит операции "только чтение".
GET, HEAD, OPTIONS, TRACE

12) Иденфикация, Аутентификация, Авторизация
Идентификация — процедура, в результате выполнения которой для субъекта идентификации выявляется его идентификатор, однозначно определяющий этого субъекта в информационной системе.
Аутентификация — процедура проверки подлинности, например проверка подлинности пользователя путем сравнения введенного им пароля с паролем, сохраненным в базе данных.
Авторизация — предоставление определенному лицу или группе лиц прав на выполнение определенных действий.

13) Что такое IP
IP - уникальный индентификатор устройства в компьютерной сети.

14) Что такое откаты в DNS
DNS-кэш сохраняет IP-адреса посещенных сайтов на локальном компьютере, чтобы в следующий раз загружать их быстрее.
В случае если перенесли сайт на другой сервер и у сайта изменился IP-адрес. То чтобы браузер открывал сайт с нового IP-адреса, необходимо удалить закэшированный IP из DNS-кэша.
Очистить DNS-кэш в ОС: cmd -  ipconfig/flushdns - enter
Очистить DNS-кэш в браузере: В строке браузера введите адрес chrome://net-internals/#dns. В открывшемся окне нажмите кнопку Clear host cache.
В том же окне нажмите на пункт Sockets и нажмите Flush socket pools.

15) Что такое порт, сколько портов у Linux сервера
Порт - определяемый программным обеспечением номер, связанный с сетевым протоколом, который получает или передает данные для определенной службы.
Сколько портов у Linux сервера: Количество портов ограничено с учётом 16-битной адресации (2^16=65536, начало — «0»). 
Все порты разделены на три диапазона — общеизвестные (или системные, 0—1023), 
зарегистрированные (или пользовательские, 1024—49151) и динамические (или частные, 49152—65535).

16) Уровни OSI
7.Уровень приложений-Сетевые процессы с прикладными программами
6.Уровень представления данных-Представление и кодирование данных
5.Сеансовый уровень-Связь между локальным и удаленным приложением
4.Транспортный уровень-Прямая связь между конечными пунктами и надежность
3.Сетевой уровень-Определение маршрута и логическая адресация
2.Канальный уровень-Доступ к среде передачи данных
1.Физический уровень-Работа со средой адресации, сигналами и двоичными данными

17) Хедеры http запросов
Host - указывает, какое веб-приложение должны обрабатывать входящий HTTP-запрос (хост, имя домена)
User-Agent - информация о Имени, версии браузера, название и версия ОС, которую вы используете. 
Accept-Encoding - сообщает серверу, может ли ваш браузер принимать сжатый output, например gzip.
Accept-Language - отображает настройки языка по умолчанию.
If-Modified-Since - указывает дату, когда браузер впервые загрузил ресурс с сервера. Если вернулся статус код 200 - значит содержимое изменилось и весь запрошенный документ обновляется.
Если статус 304 Not Modified - файл не изменился.
Cookie - отправляет файлы cookie, хранящиеся в вашем браузере для этого домена.
Referer - ссылочный url (абсолютный или частичный адрес страницы).
Authorization - содержит учетные данные для аутентификации пользовательского агента на сервере.
